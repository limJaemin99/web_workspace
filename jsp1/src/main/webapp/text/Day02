● Day02 _ 08.08

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[day01 복습]
(1) jsp 는 html에 ( 자바 코드 )를 포함한다.
(2) jsp 는 웹 서버가 요청받은것을 ( WAS(Web Application Server) )에게 처리를 위하여 요청을 전달한다.
(3) jsp 는 요청 처리를 위해 .java 로 변환이 되는데 이것을 ( 서블릿(servlet) )이라고 한다.
(4) 3번의 ( 서블릿(servlet) )을 처리하는 기능이 ( 웹 컨테이너(web container) )이다.
(5) jsp 에는 내장객체가 있다. day01에서 사용한 것은 ( out ) , ( request ) 이다.
(6) request 는 사용자가 요청한 정보를 가지고 있다. 그 중에서 ( 파라미터(parameter) )는 사용자가 보낸 요청 데이터이다.

※ Tomcat은 웹 서버 + WAS
※ html,CSS,js 에 대한 리소스(자원) 요청은 웹 컨테이너가 처리하지 않는다. (정적이기 때문)


[요청 파라미터 보내기 방법]
● form 태그 사용
	▶ 입력 태그 (input,select)의 name 속성값이 파라미터 이름 ★★★★★
	▶ 입력 태그 (input,select)의 value 속성값이 파라미터 값 ★★★★★
	
● a 태그 href 는 요청 method 가 항상 'get' 이다
	▶ href 는 서버의 주소
	
● form 태그는 method 방식을 'get','post' 지정 가능
	▶ post 방식은 문자 인코딩을 직접 설정해야 한다.
	▶ action 속성값으로 서버의 주소를 지정

● input 의 disabled 가 true 일 경우 파라미터 전송이 불가능
	▶ readonly 가 true 일 경우 파라미터 전송이 가능(편집만 불가능)

● input 의 type='hidden'(숨김) 일 때는 화면에는 표시되지 않지만, 파라미터 전송이 가능

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



1. 4form.jsp  +  5receive.jsp
	- disabled / readonly / hidden 에 따라 파라미터 전송 차이 비교
	
2-1. 6main.jsp  +  7top.jsp  +  8bottom.jsp
	- <jsp:include> 테스트

2-2. 6main.jsp  +  7top.jsp
	- <jsp:param> 테스트

2-3. 6main.jsp  +  9useBean.jsp  +  MyUser.java
	- <jsp:useBean> 테스트
	


# [JSP 액션 태그]
	1) jsp:include
		- 외부 jsp 파일을 포함시킨다. 컴파일된 '.class'를 포함한다.
		- 여러 jsp 파일에서 공통적으로 사용되는 코드 부분을 반복하여 작성하지 않고,
			파일로 생성해서 include 한다.
	
	2) jsp:param
		- jsp:include 에서 포함시키는 jsp에 파라미터를 전달할 때 사용

	3) jsp:useBean
		- ★★★★★ scope : 4가지 자바빈즈가 사용될 수 있는 영역 설정 (pageContext,request,session,application) ★★★★★
		- 속성 id : 자바빈의 id/변수명	class : 자바빈(객체)으로 만들어질 패키지명/클래스 지정
			▶ jsp:setProperty
				- 값 저장 (getParameter 메소드 + setter 메소드 실행)
				- 속성 종류
					◎ property : 자바빈을 만든 클래스의 필드(변수) 이름
					◎ name : 자바빈 id를 설정
					◎ param : input 태그의 name
					◎ property="*" 로 하면 모든 파라미터를 가져올 수 있다.
						(단, input 태그 name 속성, dto 클래스의 필드명을 통일시켜야 한다)
			▶ jsp:getProperty
				- 출력
				※ RegisterSave.jsp 에서 getParameter 대신에 사용했음
